// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.0
// Machine:  BILLXIONG18C0
// DateTime: 5/25/2014 3:42:05 PM
// UserName: bill
// Input file <CbParser.y - 5/25/2014 3:02:51 PM>

// options: lines gplex

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace FrontEnd
{
public enum Tokens {error=126,
    EOF=127,OROR=128,ANDAND=129,EQEQ=130,NOTEQ=131,GTEQ=132,
    LTEQ=133,UMINUS=134,Kwd_break=135,Kwd_char=136,Kwd_class=137,Kwd_const=138,
    Kwd_else=139,Kwd_if=140,Kwd_int=141,Kwd_new=142,Kwd_null=143,Kwd_out=144,
    Kwd_override=145,Kwd_public=146,Kwd_return=147,Kwd_static=148,Kwd_string=149,Kwd_using=150,
    Kwd_virtual=151,Kwd_void=152,Kwd_while=153,PLUSPLUS=154,MINUSMINUS=155,Ident=156,
    Number=157,StringConst=158};

// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<int,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

// Utility class for encapsulating token information
public class ScanObj {
  public int token;
  public int yylval;
  public LexLocation yylloc;
  public ScanObj( int t, int val, LexLocation loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

public class Parser: ShiftReduceParser<int, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[86];
  private static State[] states = new State[187];
  private static string[] nonTerms = new string[] {
      "Program", "$accept", "UsingList", "ClassList", "ClassDecl", "DeclList", 
      "ConstDecl", "MethodDecl", "Type", "InitVal", "FieldDeclList", "FieldDecl", 
      "IdentList", "OptFormals", "Block", "FormalPars", "FormalDecl", "TypeName", 
      "Statement", "Designator", "Expr", "OptActuals", "OptElsePart", "ActPars", 
      "DeclsAndStmts", "LocalDecl", "Qualifiers", };

  static Parser() {
    states[0] = new State(new int[]{150,183,137,-3,146,-3},new int[]{-1,1,-3,3});
    states[1] = new State(new int[]{127,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{137,6,146,174},new int[]{-4,4,-5,182});
    states[4] = new State(new int[]{137,6,146,174,127,-2},new int[]{-5,5});
    states[5] = new State(-5);
    states[6] = new State(new int[]{156,7});
    states[7] = new State(new int[]{123,8});
    states[8] = new State(-12,new int[]{-6,9});
    states[9] = new State(new int[]{125,10,146,13},new int[]{-7,11,-8,12});
    states[10] = new State(-7);
    states[11] = new State(-10);
    states[12] = new State(-11);
    states[13] = new State(new int[]{138,14,148,29,151,149,145,156,156,163,141,26,149,27,152,28},new int[]{-9,168,-18,22});
    states[14] = new State(new int[]{156,25,141,26,149,27,152,28},new int[]{-9,15,-18,22});
    states[15] = new State(new int[]{156,16});
    states[16] = new State(new int[]{61,17});
    states[17] = new State(new int[]{157,20,158,21},new int[]{-10,18});
    states[18] = new State(new int[]{59,19});
    states[19] = new State(-13);
    states[20] = new State(-14);
    states[21] = new State(-15);
    states[22] = new State(new int[]{91,23,156,-31});
    states[23] = new State(new int[]{93,24});
    states[24] = new State(-32);
    states[25] = new State(-33);
    states[26] = new State(-34);
    states[27] = new State(-35);
    states[28] = new State(-36);
    states[29] = new State(new int[]{156,25,141,26,149,27,152,28},new int[]{-9,30,-18,22});
    states[30] = new State(new int[]{156,31});
    states[31] = new State(new int[]{40,32});
    states[32] = new State(new int[]{156,25,141,26,149,27,152,28,41,-26},new int[]{-14,33,-16,143,-17,148,-9,146,-18,22});
    states[33] = new State(new int[]{41,34});
    states[34] = new State(new int[]{123,36},new int[]{-15,35});
    states[35] = new State(-21);
    states[36] = new State(-57,new int[]{-25,37});
    states[37] = new State(new int[]{125,38,156,112,140,122,153,130,135,135,147,137,123,36,59,142},new int[]{-19,39,-26,40,-20,41,-15,141});
    states[38] = new State(-54);
    states[39] = new State(-58);
    states[40] = new State(-59);
    states[41] = new State(new int[]{61,42,40,104,154,108,155,110});
    states[42] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,43,-20,73});
    states[43] = new State(new int[]{59,44,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[44] = new State(-37);
    states[45] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,46,-20,73});
    states[46] = new State(new int[]{128,-60,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-60,44,-60,41,-60,93,-60});
    states[47] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,48,-20,73});
    states[48] = new State(new int[]{128,-61,129,-61,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-61,44,-61,41,-61,93,-61});
    states[49] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,50,-20,73});
    states[50] = new State(new int[]{128,-62,129,-62,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-62,44,-62,41,-62,93,-62});
    states[51] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,52,-20,73});
    states[52] = new State(new int[]{128,-63,129,-63,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-63,44,-63,41,-63,93,-63});
    states[53] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,54,-20,73});
    states[54] = new State(new int[]{128,-64,129,-64,130,-64,131,-64,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-64,44,-64,41,-64,93,-64});
    states[55] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,56,-20,73});
    states[56] = new State(new int[]{128,-65,129,-65,130,-65,131,-65,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-65,44,-65,41,-65,93,-65});
    states[57] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,58,-20,73});
    states[58] = new State(new int[]{128,-66,129,-66,130,-66,131,-66,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-66,44,-66,41,-66,93,-66});
    states[59] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,60,-20,73});
    states[60] = new State(new int[]{128,-67,129,-67,130,-67,131,-67,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,59,-67,44,-67,41,-67,93,-67});
    states[61] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,62,-20,73});
    states[62] = new State(new int[]{128,-68,129,-68,130,-68,131,-68,133,-68,60,-68,132,-68,62,-68,43,-68,45,-68,42,65,47,67,37,69,59,-68,44,-68,41,-68,93,-68});
    states[63] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,64,-20,73});
    states[64] = new State(new int[]{128,-69,129,-69,130,-69,131,-69,133,-69,60,-69,132,-69,62,-69,43,-69,45,-69,42,65,47,67,37,69,59,-69,44,-69,41,-69,93,-69});
    states[65] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,66,-20,73});
    states[66] = new State(-70);
    states[67] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,68,-20,73});
    states[68] = new State(-71);
    states[69] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,70,-20,73});
    states[70] = new State(-72);
    states[71] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,72,-20,73});
    states[72] = new State(-73);
    states[73] = new State(new int[]{40,74,59,-74,128,-74,129,-74,130,-74,131,-74,133,-74,60,-74,132,-74,62,-74,43,-74,45,-74,42,-74,47,-74,37,-74,44,-74,41,-74,93,-74});
    states[74] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100,41,-48},new int[]{-22,75,-24,77,-21,103,-20,73});
    states[75] = new State(new int[]{41,76});
    states[76] = new State(-75);
    states[77] = new State(new int[]{44,78,41,-49});
    states[78] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,79,-20,73});
    states[79] = new State(new int[]{128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,44,-50,41,-50});
    states[80] = new State(new int[]{46,82,91,85,40,-85,59,-85,128,-85,129,-85,130,-85,131,-85,133,-85,60,-85,132,-85,62,-85,43,-85,45,-85,42,-85,47,-85,37,-85,44,-85,41,-85,93,-85,61,-85,154,-85,155,-85},new int[]{-27,81});
    states[81] = new State(-82);
    states[82] = new State(new int[]{156,83});
    states[83] = new State(new int[]{46,82,91,85,40,-85,59,-85,128,-85,129,-85,130,-85,131,-85,133,-85,60,-85,132,-85,62,-85,43,-85,45,-85,42,-85,47,-85,37,-85,44,-85,41,-85,93,-85,61,-85,154,-85,155,-85},new int[]{-27,84});
    states[84] = new State(-83);
    states[85] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,86,-20,73});
    states[86] = new State(new int[]{93,87,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[87] = new State(new int[]{46,82,91,85,40,-85,59,-85,128,-85,129,-85,130,-85,131,-85,133,-85,60,-85,132,-85,62,-85,43,-85,45,-85,42,-85,47,-85,37,-85,44,-85,41,-85,93,-85,61,-85,154,-85,155,-85},new int[]{-27,88});
    states[88] = new State(-84);
    states[89] = new State(-76);
    states[90] = new State(new int[]{46,91,59,-77,128,-77,129,-77,130,-77,131,-77,133,-77,60,-77,132,-77,62,-77,43,-77,45,-77,42,-77,47,-77,37,-77,44,-77,41,-77,93,-77});
    states[91] = new State(new int[]{156,92});
    states[92] = new State(-78);
    states[93] = new State(new int[]{156,94});
    states[94] = new State(new int[]{40,95,91,97});
    states[95] = new State(new int[]{41,96});
    states[96] = new State(-79);
    states[97] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,98,-20,73});
    states[98] = new State(new int[]{93,99,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[99] = new State(-80);
    states[100] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,101,-20,73});
    states[101] = new State(new int[]{41,102,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[102] = new State(-81);
    states[103] = new State(new int[]{128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69,44,-51,41,-51});
    states[104] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100,41,-48},new int[]{-22,105,-24,77,-21,103,-20,73});
    states[105] = new State(new int[]{41,106});
    states[106] = new State(new int[]{59,107});
    states[107] = new State(-38);
    states[108] = new State(new int[]{59,109});
    states[109] = new State(-39);
    states[110] = new State(new int[]{59,111});
    states[111] = new State(-40);
    states[112] = new State(new int[]{91,117,46,82,156,121,61,-85,40,-85,154,-85,155,-85},new int[]{-27,81,-13,113});
    states[113] = new State(new int[]{59,114,44,115});
    states[114] = new State(-55);
    states[115] = new State(new int[]{156,116});
    states[116] = new State(-19);
    states[117] = new State(new int[]{93,118,45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,86,-20,73});
    states[118] = new State(new int[]{156,121},new int[]{-13,119});
    states[119] = new State(new int[]{59,120,44,115});
    states[120] = new State(-56);
    states[121] = new State(-20);
    states[122] = new State(new int[]{40,123});
    states[123] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,124,-20,73});
    states[124] = new State(new int[]{41,125,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[125] = new State(new int[]{156,80,140,122,153,130,135,135,147,137,123,36,59,142},new int[]{-19,126,-20,41,-15,141});
    states[126] = new State(new int[]{139,128,125,-53,156,-53,140,-53,153,-53,135,-53,147,-53,123,-53,59,-53},new int[]{-23,127});
    states[127] = new State(-41);
    states[128] = new State(new int[]{156,80,140,122,153,130,135,135,147,137,123,36,59,142},new int[]{-19,129,-20,41,-15,141});
    states[129] = new State(-52);
    states[130] = new State(new int[]{40,131});
    states[131] = new State(new int[]{45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,132,-20,73});
    states[132] = new State(new int[]{41,133,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[133] = new State(new int[]{156,80,140,122,153,130,135,135,147,137,123,36,59,142},new int[]{-19,134,-20,41,-15,141});
    states[134] = new State(-42);
    states[135] = new State(new int[]{59,136});
    states[136] = new State(-43);
    states[137] = new State(new int[]{59,138,45,71,156,80,157,89,158,90,142,93,40,100},new int[]{-21,139,-20,73});
    states[138] = new State(-44);
    states[139] = new State(new int[]{59,140,128,45,129,47,130,49,131,51,133,53,60,55,132,57,62,59,43,61,45,63,42,65,47,67,37,69});
    states[140] = new State(-45);
    states[141] = new State(-46);
    states[142] = new State(-47);
    states[143] = new State(new int[]{44,144,41,-27});
    states[144] = new State(new int[]{156,25,141,26,149,27,152,28},new int[]{-17,145,-9,146,-18,22});
    states[145] = new State(-29);
    states[146] = new State(new int[]{156,147});
    states[147] = new State(-30);
    states[148] = new State(-28);
    states[149] = new State(new int[]{156,25,141,26,149,27,152,28},new int[]{-9,150,-18,22});
    states[150] = new State(new int[]{156,151});
    states[151] = new State(new int[]{40,152});
    states[152] = new State(new int[]{156,25,141,26,149,27,152,28,41,-26},new int[]{-14,153,-16,143,-17,148,-9,146,-18,22});
    states[153] = new State(new int[]{41,154});
    states[154] = new State(new int[]{123,36},new int[]{-15,155});
    states[155] = new State(-22);
    states[156] = new State(new int[]{156,25,141,26,149,27,152,28},new int[]{-9,157,-18,22});
    states[157] = new State(new int[]{156,158});
    states[158] = new State(new int[]{40,159});
    states[159] = new State(new int[]{156,25,141,26,149,27,152,28,41,-26},new int[]{-14,160,-16,143,-17,148,-9,146,-18,22});
    states[160] = new State(new int[]{41,161});
    states[161] = new State(new int[]{123,36},new int[]{-15,162});
    states[162] = new State(-23);
    states[163] = new State(new int[]{40,164,91,-33,156,-33});
    states[164] = new State(new int[]{156,25,141,26,149,27,152,28,41,-26},new int[]{-14,165,-16,143,-17,148,-9,146,-18,22});
    states[165] = new State(new int[]{41,166});
    states[166] = new State(new int[]{123,36},new int[]{-15,167});
    states[167] = new State(-24);
    states[168] = new State(new int[]{156,169});
    states[169] = new State(new int[]{40,170});
    states[170] = new State(new int[]{156,25,141,26,149,27,152,28,41,-26},new int[]{-14,171,-16,143,-17,148,-9,146,-18,22});
    states[171] = new State(new int[]{41,172});
    states[172] = new State(new int[]{123,36},new int[]{-15,173});
    states[173] = new State(-25);
    states[174] = new State(new int[]{137,175});
    states[175] = new State(new int[]{156,176});
    states[176] = new State(new int[]{123,177});
    states[177] = new State(-12,new int[]{-6,178});
    states[178] = new State(new int[]{125,179,146,13},new int[]{-7,11,-8,12});
    states[179] = new State(new int[]{58,180,137,-8,146,-8,127,-8});
    states[180] = new State(new int[]{156,181});
    states[181] = new State(-9);
    states[182] = new State(-6);
    states[183] = new State(new int[]{156,184});
    states[184] = new State(new int[]{59,185});
    states[185] = new State(new int[]{150,183,137,-3,146,-3},new int[]{-3,186});
    states[186] = new State(-4);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,127});
    rules[2] = new Rule(-1, new int[]{-3,-4});
    rules[3] = new Rule(-3, new int[]{});
    rules[4] = new Rule(-3, new int[]{150,156,59,-3});
    rules[5] = new Rule(-4, new int[]{-4,-5});
    rules[6] = new Rule(-4, new int[]{-5});
    rules[7] = new Rule(-5, new int[]{137,156,123,-6,125});
    rules[8] = new Rule(-5, new int[]{146,137,156,123,-6,125});
    rules[9] = new Rule(-5, new int[]{146,137,156,123,-6,125,58,156});
    rules[10] = new Rule(-6, new int[]{-6,-7});
    rules[11] = new Rule(-6, new int[]{-6,-8});
    rules[12] = new Rule(-6, new int[]{});
    rules[13] = new Rule(-7, new int[]{146,138,-9,156,61,-10,59});
    rules[14] = new Rule(-10, new int[]{157});
    rules[15] = new Rule(-10, new int[]{158});
    rules[16] = new Rule(-11, new int[]{-11,-12});
    rules[17] = new Rule(-11, new int[]{});
    rules[18] = new Rule(-12, new int[]{146,-9,-13,59});
    rules[19] = new Rule(-13, new int[]{-13,44,156});
    rules[20] = new Rule(-13, new int[]{156});
    rules[21] = new Rule(-8, new int[]{146,148,-9,156,40,-14,41,-15});
    rules[22] = new Rule(-8, new int[]{146,151,-9,156,40,-14,41,-15});
    rules[23] = new Rule(-8, new int[]{146,145,-9,156,40,-14,41,-15});
    rules[24] = new Rule(-8, new int[]{146,156,40,-14,41,-15});
    rules[25] = new Rule(-8, new int[]{146,-9,156,40,-14,41,-15});
    rules[26] = new Rule(-14, new int[]{});
    rules[27] = new Rule(-14, new int[]{-16});
    rules[28] = new Rule(-16, new int[]{-17});
    rules[29] = new Rule(-16, new int[]{-16,44,-17});
    rules[30] = new Rule(-17, new int[]{-9,156});
    rules[31] = new Rule(-9, new int[]{-18});
    rules[32] = new Rule(-9, new int[]{-18,91,93});
    rules[33] = new Rule(-18, new int[]{156});
    rules[34] = new Rule(-18, new int[]{141});
    rules[35] = new Rule(-18, new int[]{149});
    rules[36] = new Rule(-18, new int[]{152});
    rules[37] = new Rule(-19, new int[]{-20,61,-21,59});
    rules[38] = new Rule(-19, new int[]{-20,40,-22,41,59});
    rules[39] = new Rule(-19, new int[]{-20,154,59});
    rules[40] = new Rule(-19, new int[]{-20,155,59});
    rules[41] = new Rule(-19, new int[]{140,40,-21,41,-19,-23});
    rules[42] = new Rule(-19, new int[]{153,40,-21,41,-19});
    rules[43] = new Rule(-19, new int[]{135,59});
    rules[44] = new Rule(-19, new int[]{147,59});
    rules[45] = new Rule(-19, new int[]{147,-21,59});
    rules[46] = new Rule(-19, new int[]{-15});
    rules[47] = new Rule(-19, new int[]{59});
    rules[48] = new Rule(-22, new int[]{});
    rules[49] = new Rule(-22, new int[]{-24});
    rules[50] = new Rule(-24, new int[]{-24,44,-21});
    rules[51] = new Rule(-24, new int[]{-21});
    rules[52] = new Rule(-23, new int[]{139,-19});
    rules[53] = new Rule(-23, new int[]{});
    rules[54] = new Rule(-15, new int[]{123,-25,125});
    rules[55] = new Rule(-26, new int[]{156,-13,59});
    rules[56] = new Rule(-26, new int[]{156,91,93,-13,59});
    rules[57] = new Rule(-25, new int[]{});
    rules[58] = new Rule(-25, new int[]{-25,-19});
    rules[59] = new Rule(-25, new int[]{-25,-26});
    rules[60] = new Rule(-21, new int[]{-21,128,-21});
    rules[61] = new Rule(-21, new int[]{-21,129,-21});
    rules[62] = new Rule(-21, new int[]{-21,130,-21});
    rules[63] = new Rule(-21, new int[]{-21,131,-21});
    rules[64] = new Rule(-21, new int[]{-21,133,-21});
    rules[65] = new Rule(-21, new int[]{-21,60,-21});
    rules[66] = new Rule(-21, new int[]{-21,132,-21});
    rules[67] = new Rule(-21, new int[]{-21,62,-21});
    rules[68] = new Rule(-21, new int[]{-21,43,-21});
    rules[69] = new Rule(-21, new int[]{-21,45,-21});
    rules[70] = new Rule(-21, new int[]{-21,42,-21});
    rules[71] = new Rule(-21, new int[]{-21,47,-21});
    rules[72] = new Rule(-21, new int[]{-21,37,-21});
    rules[73] = new Rule(-21, new int[]{45,-21});
    rules[74] = new Rule(-21, new int[]{-20});
    rules[75] = new Rule(-21, new int[]{-20,40,-22,41});
    rules[76] = new Rule(-21, new int[]{157});
    rules[77] = new Rule(-21, new int[]{158});
    rules[78] = new Rule(-21, new int[]{158,46,156});
    rules[79] = new Rule(-21, new int[]{142,156,40,41});
    rules[80] = new Rule(-21, new int[]{142,156,91,-21,93});
    rules[81] = new Rule(-21, new int[]{40,-21,41});
    rules[82] = new Rule(-20, new int[]{156,-27});
    rules[83] = new Rule(-27, new int[]{46,156,-27});
    rules[84] = new Rule(-27, new int[]{91,-21,93,-27});
    rules[85] = new Rule(-27, new int[]{});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 174 "CbParser.y"

#line 175 "CbParser.y"
// The parser needs a constructor
#line 176 "CbParser.y"
Parser() : base(null) { }
#line 177 "CbParser.y"

#line 178 "CbParser.y"

}
}
