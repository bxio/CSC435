// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2010
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.0
// Machine:  BILLXIONG18C0
// DateTime: 5/27/2014 1:54:59 PM
// UserName: bill
// Input file <CbParser.y - 5/27/2014 1:51:44 PM>

// options: lines gplex

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace FrontEnd
{
public enum Tokens {error=126,
    EOF=127,OROR=128,ANDAND=129,EQEQ=130,NOTEQ=131,GTEQ=132,
    LTEQ=133,UMINUS=134,Kwd_break=135,Kwd_char=136,Kwd_class=137,Kwd_const=138,
    Kwd_else=139,Kwd_if=140,Kwd_int=141,Kwd_new=142,Kwd_null=143,Kwd_out=144,
    Kwd_override=145,Kwd_public=146,Kwd_return=147,Kwd_static=148,Kwd_string=149,Kwd_using=150,
    Kwd_virtual=151,Kwd_void=152,Kwd_while=153,PLUSPLUS=154,MINUSMINUS=155,Ident=156,
    Number=157,StringConst=158};

// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<int,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

// Utility class for encapsulating token information
public class ScanObj {
  public int token;
  public int yylval;
  public LexLocation yylloc;
  public ScanObj( int t, int val, LexLocation loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

public class Parser: ShiftReduceParser<int, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliasses;
#pragma warning restore 649
  private static Rule[] rules = new Rule[83];
  private static State[] states = new State[190];
  private static string[] nonTerms = new string[] {
      "Program", "$accept", "UsingList", "ClassList", "ClassDecl", "DeclList", 
      "ConstDecl", "MethodDecl", "Type", "InitVal", "IdentList", "OptFormals", 
      "Block", "FormalPars", "FormalDecl", "TypeName", "Statement", "Designator", 
      "Expr", "OptActuals", "OptElsePart", "ActPars", "DeclsAndStmts", "LocalDecl", 
      "Qualifiers", };

  static Parser() {
    states[0] = new State(new int[]{150,186,137,-3},new int[]{-1,1,-3,3});
    states[1] = new State(new int[]{127,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{137,6},new int[]{-4,4,-5,185});
    states[4] = new State(new int[]{137,6,127,-2},new int[]{-5,5});
    states[5] = new State(-5);
    states[6] = new State(new int[]{156,7});
    states[7] = new State(new int[]{123,8});
    states[8] = new State(-11,new int[]{-6,9});
    states[9] = new State(new int[]{125,10,146,15},new int[]{-7,13,-8,14});
    states[10] = new State(new int[]{58,11,137,-7,127,-7});
    states[11] = new State(new int[]{156,12});
    states[12] = new State(-8);
    states[13] = new State(-9);
    states[14] = new State(-10);
    states[15] = new State(new int[]{138,16,148,32,151,160,145,167,156,174,141,28,149,29,136,30,152,31},new int[]{-9,179,-16,24});
    states[16] = new State(new int[]{156,27,141,28,149,29,136,30,152,31},new int[]{-9,17,-16,24});
    states[17] = new State(new int[]{156,18});
    states[18] = new State(new int[]{61,19});
    states[19] = new State(new int[]{157,22,158,23},new int[]{-10,20});
    states[20] = new State(new int[]{59,21});
    states[21] = new State(-12);
    states[22] = new State(-13);
    states[23] = new State(-14);
    states[24] = new State(new int[]{91,25,156,-27});
    states[25] = new State(new int[]{93,26});
    states[26] = new State(-28);
    states[27] = new State(-29);
    states[28] = new State(-30);
    states[29] = new State(-31);
    states[30] = new State(-32);
    states[31] = new State(-33);
    states[32] = new State(new int[]{156,27,141,28,149,29,136,30,152,31},new int[]{-9,33,-16,24});
    states[33] = new State(new int[]{156,34});
    states[34] = new State(new int[]{40,35});
    states[35] = new State(new int[]{156,27,141,28,149,29,136,30,152,31,41,-22},new int[]{-12,36,-14,154,-15,159,-9,157,-16,24});
    states[36] = new State(new int[]{41,37});
    states[37] = new State(new int[]{123,39},new int[]{-13,38});
    states[38] = new State(-17);
    states[39] = new State(-54,new int[]{-23,40});
    states[40] = new State(new int[]{125,41,123,42,156,144},new int[]{-24,143});
    states[41] = new State(-51);
    states[42] = new State(new int[]{156,84,140,116,153,128,135,135,147,137,123,39,59,142},new int[]{-17,43,-18,45,-13,141});
    states[43] = new State(new int[]{125,44});
    states[44] = new State(-55);
    states[45] = new State(new int[]{61,46,40,108,154,112,155,114});
    states[46] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,47,-18,77});
    states[47] = new State(new int[]{59,48,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[48] = new State(-34);
    states[49] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,50,-18,77});
    states[50] = new State(new int[]{128,-57,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-57,44,-57,41,-57,93,-57});
    states[51] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,52,-18,77});
    states[52] = new State(new int[]{128,-58,129,-58,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-58,44,-58,41,-58,93,-58});
    states[53] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,54,-18,77});
    states[54] = new State(new int[]{128,-59,129,-59,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-59,44,-59,41,-59,93,-59});
    states[55] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,56,-18,77});
    states[56] = new State(new int[]{128,-60,129,-60,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-60,44,-60,41,-60,93,-60});
    states[57] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,58,-18,77});
    states[58] = new State(new int[]{128,-61,129,-61,130,-61,131,-61,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-61,44,-61,41,-61,93,-61});
    states[59] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,60,-18,77});
    states[60] = new State(new int[]{128,-62,129,-62,130,-62,131,-62,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-62,44,-62,41,-62,93,-62});
    states[61] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,62,-18,77});
    states[62] = new State(new int[]{128,-63,129,-63,130,-63,131,-63,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-63,44,-63,41,-63,93,-63});
    states[63] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,64,-18,77});
    states[64] = new State(new int[]{128,-64,129,-64,130,-64,131,-64,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,59,-64,44,-64,41,-64,93,-64});
    states[65] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,66,-18,77});
    states[66] = new State(new int[]{128,-65,129,-65,130,-65,131,-65,133,-65,60,-65,132,-65,62,-65,43,-65,45,-65,42,69,47,71,37,73,59,-65,44,-65,41,-65,93,-65});
    states[67] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,68,-18,77});
    states[68] = new State(new int[]{128,-66,129,-66,130,-66,131,-66,133,-66,60,-66,132,-66,62,-66,43,-66,45,-66,42,69,47,71,37,73,59,-66,44,-66,41,-66,93,-66});
    states[69] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,70,-18,77});
    states[70] = new State(-67);
    states[71] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,72,-18,77});
    states[72] = new State(-68);
    states[73] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,74,-18,77});
    states[74] = new State(-69);
    states[75] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,76,-18,77});
    states[76] = new State(-70);
    states[77] = new State(new int[]{40,78,59,-71,128,-71,129,-71,130,-71,131,-71,133,-71,60,-71,132,-71,62,-71,43,-71,45,-71,42,-71,47,-71,37,-71,44,-71,41,-71,93,-71});
    states[78] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104,41,-45},new int[]{-20,79,-22,81,-19,107,-18,77});
    states[79] = new State(new int[]{41,80});
    states[80] = new State(-72);
    states[81] = new State(new int[]{44,82,41,-46});
    states[82] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,83,-18,77});
    states[83] = new State(new int[]{128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,44,-47,41,-47});
    states[84] = new State(new int[]{46,86,91,89,61,-82,40,-82,154,-82,155,-82,59,-82,128,-82,129,-82,130,-82,131,-82,133,-82,60,-82,132,-82,62,-82,43,-82,45,-82,42,-82,47,-82,37,-82,44,-82,41,-82,93,-82},new int[]{-25,85});
    states[85] = new State(-79);
    states[86] = new State(new int[]{156,87});
    states[87] = new State(new int[]{46,86,91,89,61,-82,40,-82,154,-82,155,-82,59,-82,128,-82,129,-82,130,-82,131,-82,133,-82,60,-82,132,-82,62,-82,43,-82,45,-82,42,-82,47,-82,37,-82,44,-82,41,-82,93,-82},new int[]{-25,88});
    states[88] = new State(-80);
    states[89] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,90,-18,77});
    states[90] = new State(new int[]{93,91,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[91] = new State(new int[]{46,86,91,89,61,-82,40,-82,154,-82,155,-82,59,-82,128,-82,129,-82,130,-82,131,-82,133,-82,60,-82,132,-82,62,-82,43,-82,45,-82,42,-82,47,-82,37,-82,44,-82,41,-82,93,-82},new int[]{-25,92});
    states[92] = new State(-81);
    states[93] = new State(-73);
    states[94] = new State(new int[]{46,95,59,-74,128,-74,129,-74,130,-74,131,-74,133,-74,60,-74,132,-74,62,-74,43,-74,45,-74,42,-74,47,-74,37,-74,44,-74,41,-74,93,-74});
    states[95] = new State(new int[]{156,96});
    states[96] = new State(-75);
    states[97] = new State(new int[]{156,98});
    states[98] = new State(new int[]{40,99,91,101});
    states[99] = new State(new int[]{41,100});
    states[100] = new State(-76);
    states[101] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,102,-18,77});
    states[102] = new State(new int[]{93,103,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[103] = new State(-77);
    states[104] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,105,-18,77});
    states[105] = new State(new int[]{41,106,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[106] = new State(-78);
    states[107] = new State(new int[]{128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73,44,-48,41,-48});
    states[108] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104,41,-45},new int[]{-20,109,-22,81,-19,107,-18,77});
    states[109] = new State(new int[]{41,110});
    states[110] = new State(new int[]{59,111});
    states[111] = new State(-35);
    states[112] = new State(new int[]{59,113});
    states[113] = new State(-36);
    states[114] = new State(new int[]{59,115});
    states[115] = new State(-37);
    states[116] = new State(new int[]{40,117});
    states[117] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,118,-18,77});
    states[118] = new State(new int[]{41,119,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[119] = new State(new int[]{123,120});
    states[120] = new State(new int[]{156,84,140,116,153,128,135,135,147,137,123,39,59,142},new int[]{-17,121,-18,45,-13,141});
    states[121] = new State(new int[]{125,122});
    states[122] = new State(new int[]{139,124,125,-50},new int[]{-21,123});
    states[123] = new State(-38);
    states[124] = new State(new int[]{123,125});
    states[125] = new State(new int[]{156,84,140,116,153,128,135,135,147,137,123,39,59,142},new int[]{-17,126,-18,45,-13,141});
    states[126] = new State(new int[]{125,127});
    states[127] = new State(-49);
    states[128] = new State(new int[]{40,129});
    states[129] = new State(new int[]{45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,130,-18,77});
    states[130] = new State(new int[]{41,131,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[131] = new State(new int[]{123,132});
    states[132] = new State(new int[]{156,84,140,116,153,128,135,135,147,137,123,39,59,142},new int[]{-17,133,-18,45,-13,141});
    states[133] = new State(new int[]{125,134});
    states[134] = new State(-39);
    states[135] = new State(new int[]{59,136});
    states[136] = new State(-40);
    states[137] = new State(new int[]{59,138,45,75,156,84,157,93,158,94,142,97,40,104},new int[]{-19,139,-18,77});
    states[138] = new State(-41);
    states[139] = new State(new int[]{59,140,128,49,129,51,130,53,131,55,133,57,60,59,132,61,62,63,43,65,45,67,42,69,47,71,37,73});
    states[140] = new State(-42);
    states[141] = new State(-43);
    states[142] = new State(-44);
    states[143] = new State(-56);
    states[144] = new State(new int[]{91,149,156,153},new int[]{-11,145});
    states[145] = new State(new int[]{59,146,44,147});
    states[146] = new State(-52);
    states[147] = new State(new int[]{156,148});
    states[148] = new State(-15);
    states[149] = new State(new int[]{93,150});
    states[150] = new State(new int[]{156,153},new int[]{-11,151});
    states[151] = new State(new int[]{59,152,44,147});
    states[152] = new State(-53);
    states[153] = new State(-16);
    states[154] = new State(new int[]{44,155,41,-23});
    states[155] = new State(new int[]{156,27,141,28,149,29,136,30,152,31},new int[]{-15,156,-9,157,-16,24});
    states[156] = new State(-25);
    states[157] = new State(new int[]{156,158});
    states[158] = new State(-26);
    states[159] = new State(-24);
    states[160] = new State(new int[]{156,27,141,28,149,29,136,30,152,31},new int[]{-9,161,-16,24});
    states[161] = new State(new int[]{156,162});
    states[162] = new State(new int[]{40,163});
    states[163] = new State(new int[]{156,27,141,28,149,29,136,30,152,31,41,-22},new int[]{-12,164,-14,154,-15,159,-9,157,-16,24});
    states[164] = new State(new int[]{41,165});
    states[165] = new State(new int[]{123,39},new int[]{-13,166});
    states[166] = new State(-18);
    states[167] = new State(new int[]{156,27,141,28,149,29,136,30,152,31},new int[]{-9,168,-16,24});
    states[168] = new State(new int[]{156,169});
    states[169] = new State(new int[]{40,170});
    states[170] = new State(new int[]{156,27,141,28,149,29,136,30,152,31,41,-22},new int[]{-12,171,-14,154,-15,159,-9,157,-16,24});
    states[171] = new State(new int[]{41,172});
    states[172] = new State(new int[]{123,39},new int[]{-13,173});
    states[173] = new State(-19);
    states[174] = new State(new int[]{40,175,91,-29,156,-29});
    states[175] = new State(new int[]{156,27,141,28,149,29,136,30,152,31,41,-22},new int[]{-12,176,-14,154,-15,159,-9,157,-16,24});
    states[176] = new State(new int[]{41,177});
    states[177] = new State(new int[]{123,39},new int[]{-13,178});
    states[178] = new State(-20);
    states[179] = new State(new int[]{156,180});
    states[180] = new State(new int[]{40,181});
    states[181] = new State(new int[]{156,27,141,28,149,29,136,30,152,31,41,-22},new int[]{-12,182,-14,154,-15,159,-9,157,-16,24});
    states[182] = new State(new int[]{41,183});
    states[183] = new State(new int[]{123,39},new int[]{-13,184});
    states[184] = new State(-21);
    states[185] = new State(-6);
    states[186] = new State(new int[]{156,187});
    states[187] = new State(new int[]{59,188});
    states[188] = new State(new int[]{150,186,137,-3},new int[]{-3,189});
    states[189] = new State(-4);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,127});
    rules[2] = new Rule(-1, new int[]{-3,-4});
    rules[3] = new Rule(-3, new int[]{});
    rules[4] = new Rule(-3, new int[]{150,156,59,-3});
    rules[5] = new Rule(-4, new int[]{-4,-5});
    rules[6] = new Rule(-4, new int[]{-5});
    rules[7] = new Rule(-5, new int[]{137,156,123,-6,125});
    rules[8] = new Rule(-5, new int[]{137,156,123,-6,125,58,156});
    rules[9] = new Rule(-6, new int[]{-6,-7});
    rules[10] = new Rule(-6, new int[]{-6,-8});
    rules[11] = new Rule(-6, new int[]{});
    rules[12] = new Rule(-7, new int[]{146,138,-9,156,61,-10,59});
    rules[13] = new Rule(-10, new int[]{157});
    rules[14] = new Rule(-10, new int[]{158});
    rules[15] = new Rule(-11, new int[]{-11,44,156});
    rules[16] = new Rule(-11, new int[]{156});
    rules[17] = new Rule(-8, new int[]{146,148,-9,156,40,-12,41,-13});
    rules[18] = new Rule(-8, new int[]{146,151,-9,156,40,-12,41,-13});
    rules[19] = new Rule(-8, new int[]{146,145,-9,156,40,-12,41,-13});
    rules[20] = new Rule(-8, new int[]{146,156,40,-12,41,-13});
    rules[21] = new Rule(-8, new int[]{146,-9,156,40,-12,41,-13});
    rules[22] = new Rule(-12, new int[]{});
    rules[23] = new Rule(-12, new int[]{-14});
    rules[24] = new Rule(-14, new int[]{-15});
    rules[25] = new Rule(-14, new int[]{-14,44,-15});
    rules[26] = new Rule(-15, new int[]{-9,156});
    rules[27] = new Rule(-9, new int[]{-16});
    rules[28] = new Rule(-9, new int[]{-16,91,93});
    rules[29] = new Rule(-16, new int[]{156});
    rules[30] = new Rule(-16, new int[]{141});
    rules[31] = new Rule(-16, new int[]{149});
    rules[32] = new Rule(-16, new int[]{136});
    rules[33] = new Rule(-16, new int[]{152});
    rules[34] = new Rule(-17, new int[]{-18,61,-19,59});
    rules[35] = new Rule(-17, new int[]{-18,40,-20,41,59});
    rules[36] = new Rule(-17, new int[]{-18,154,59});
    rules[37] = new Rule(-17, new int[]{-18,155,59});
    rules[38] = new Rule(-17, new int[]{140,40,-19,41,123,-17,125,-21});
    rules[39] = new Rule(-17, new int[]{153,40,-19,41,123,-17,125});
    rules[40] = new Rule(-17, new int[]{135,59});
    rules[41] = new Rule(-17, new int[]{147,59});
    rules[42] = new Rule(-17, new int[]{147,-19,59});
    rules[43] = new Rule(-17, new int[]{-13});
    rules[44] = new Rule(-17, new int[]{59});
    rules[45] = new Rule(-20, new int[]{});
    rules[46] = new Rule(-20, new int[]{-22});
    rules[47] = new Rule(-22, new int[]{-22,44,-19});
    rules[48] = new Rule(-22, new int[]{-19});
    rules[49] = new Rule(-21, new int[]{139,123,-17,125});
    rules[50] = new Rule(-21, new int[]{});
    rules[51] = new Rule(-13, new int[]{123,-23,125});
    rules[52] = new Rule(-24, new int[]{156,-11,59});
    rules[53] = new Rule(-24, new int[]{156,91,93,-11,59});
    rules[54] = new Rule(-23, new int[]{});
    rules[55] = new Rule(-23, new int[]{-23,123,-17,125});
    rules[56] = new Rule(-23, new int[]{-23,-24});
    rules[57] = new Rule(-19, new int[]{-19,128,-19});
    rules[58] = new Rule(-19, new int[]{-19,129,-19});
    rules[59] = new Rule(-19, new int[]{-19,130,-19});
    rules[60] = new Rule(-19, new int[]{-19,131,-19});
    rules[61] = new Rule(-19, new int[]{-19,133,-19});
    rules[62] = new Rule(-19, new int[]{-19,60,-19});
    rules[63] = new Rule(-19, new int[]{-19,132,-19});
    rules[64] = new Rule(-19, new int[]{-19,62,-19});
    rules[65] = new Rule(-19, new int[]{-19,43,-19});
    rules[66] = new Rule(-19, new int[]{-19,45,-19});
    rules[67] = new Rule(-19, new int[]{-19,42,-19});
    rules[68] = new Rule(-19, new int[]{-19,47,-19});
    rules[69] = new Rule(-19, new int[]{-19,37,-19});
    rules[70] = new Rule(-19, new int[]{45,-19});
    rules[71] = new Rule(-19, new int[]{-18});
    rules[72] = new Rule(-19, new int[]{-18,40,-20,41});
    rules[73] = new Rule(-19, new int[]{157});
    rules[74] = new Rule(-19, new int[]{158});
    rules[75] = new Rule(-19, new int[]{158,46,156});
    rules[76] = new Rule(-19, new int[]{142,156,40,41});
    rules[77] = new Rule(-19, new int[]{142,156,91,-19,93});
    rules[78] = new Rule(-19, new int[]{40,-19,41});
    rules[79] = new Rule(-18, new int[]{156,-25});
    rules[80] = new Rule(-25, new int[]{46,156,-25});
    rules[81] = new Rule(-25, new int[]{91,-19,93,-25});
    rules[82] = new Rule(-25, new int[]{});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 176 "CbParser.y"
// The parser needs a constructor
#line 177 "CbParser.y"
Parser() : base(null) { }
#line 178 "CbParser.y"

#line 179 "CbParser.y"

}
}
